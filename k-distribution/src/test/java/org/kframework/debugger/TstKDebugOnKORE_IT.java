package org.kframework.debugger;

import org.junit.Test;
import org.junit.rules.TestName;
import org.kframework.attributes.Source;
import org.kframework.kore.K;
import org.kframework.utils.KoreUtils;

import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Optional;

import static org.junit.Assert.*;


/**
 * Created by Manasvi on 6/19/15.
 * <p>
 * Test File for the Debugger Interface Implementation
 */
public class TstKDebugOnKORE_IT {


    @org.junit.Rule
    public TestName name = new TestName();
    private static KoreUtils utils;

    protected File testResource(String baseName) throws URISyntaxException {
        return new File(TstKDebugOnKORE_IT.class.getResource(baseName).toURI());
    }


    @Test
    public void kore_imp() throws IOException, URISyntaxException {
        String filename = "/convertor-tests/" + name.getMethodName() + ".k";
        utils = new KoreUtils(filename);
        String pgm = "int s, n; n = 10; while(0<=n) { s = s + n; n = n + -1; }";
        K parsed = utils.getParsed(pgm, Source.apply("generated by " + getClass().getSimpleName()));
        KDebug debuggerSession = new KoreKDebug(parsed, utils.getRewriter());
        K debugResult = debuggerSession.step(10).getCurrentK();
        K expectedResult = utils.stepRewrite(parsed, Optional.ofNullable(new Integer(10)));
        assertEquals("Normal and Debug results don't match, when both allowed to run for 10 steps", expectedResult, debugResult);

        /* 10 more steps on debugger should equal 20 total steps for normal execution */
        debugResult = debuggerSession.step(10).getCurrentK();
        expectedResult = utils.stepRewrite(parsed, Optional.ofNullable(new Integer(20)));
        assertEquals("Normal and Debug results don't match, when normal takes 20 steps, and debugger 10 steps in ongoing session", expectedResult, debugResult);

        /*  Jumping on Debugger and 50 steps for normal executor */
        debugResult = debuggerSession.jumpTo(50).getCurrentK();
        expectedResult = utils.stepRewrite(parsed, Optional.ofNullable(new Integer(50)));
        assertEquals("Normal and Debug results don't match, when normal takes 50 steps, and debugger jumps to state 50", expectedResult, debugResult);

        /* Going Back on Debugger */
        debugResult = debuggerSession.backStep(25).getCurrentK();
        expectedResult = utils.stepRewrite(parsed, Optional.ofNullable(new Integer(25)));
        assertEquals("Normal and Debug results don't match, when normal takes 25 steps, and debugger goes back 25 steps", expectedResult, debugResult);

    }
}
