Solution 1
V ==K ( Tree ( Tree ( Tree ( Leaf ( 5 , .Exps ) , ( Leaf ( 4 , .Exps ) , .Exps ) ) , ( Leaf ( 3 , .Exps ) , .Exps ) ) , ( Tree ( Leaf ( 2 , .Exps ) , ( Leaf ( 1 , .Exps ) , .Exps ) ) , .Exps ) ) ) andBool ( _0 ==K <env> .Map </env> andBool _1 ==K <store> 1 |-> closure ( mirror |-> 1 , ( Leaf ( n , .Exps ) -> ( Leaf ( n , .Exps ) ) ) | ( ( Tree ( left , ( right , .Exps ) ) -> ( Tree ( ( mirror right ) , ( ( mirror left ) , .Exps ) ) ) ) | .Cases ) ) 2 |-> ( Tree ( Leaf ( 1 , .Exps ) , ( Leaf ( 2 , .Exps ) , .Exps ) ) ) 3 |-> ( Tree ( Leaf ( 3 , .Exps ) , ( Tree ( Leaf ( 4 , .Exps ) , ( Leaf ( 5 , .Exps ) , .Exps ) ) , .Exps ) ) ) 4 |-> ( Leaf ( 1 , .Exps ) ) 5 |-> ( Leaf ( 2 , .Exps ) ) 6 |-> 1 7 |-> 2 8 |-> ( Leaf ( 3 , .Exps ) ) 9 |-> ( Tree ( Leaf ( 4 , .Exps ) , ( Leaf ( 5 , .Exps ) , .Exps ) ) ) 10 |-> 3 11 |-> ( Leaf ( 4 , .Exps ) ) 12 |-> ( Leaf ( 5 , .Exps ) ) 13 |-> 4 14 |-> 5 </store> )
