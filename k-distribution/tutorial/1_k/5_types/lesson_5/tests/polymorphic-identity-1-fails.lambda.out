Search results:

Solution 1:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_0 ( V0 , ( bool -> V0 ) 1 ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 2:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_0 ( V0 , ( bool -> V0 ) 1 ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 3:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_0 ( V0 , id 1 ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 4:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_0 ( V0 , id 1 ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 5:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_0 ( V0 , id int ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 6:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_0 ( V0 , id int ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 7:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_1 ( V0 , ( bool -> V0 ) 2 ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 8:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_1 ( V0 , ( bool -> V0 ) 2 ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 9:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_1 ( V0 , id 2 ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 10:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_1 ( V0 , id 2 ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 11:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_1 ( V0 , id int ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 12:
V:K -->
( ( bool -> V0 ) = ( int -> V1 ) ) ~> V1 ~> #freezerif_then_else_1 ( V0 , id int ) ~> #freezer_->_0 ( bool -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 13:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( ( int -> V0 ) 1 , V0 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 14:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( ( int -> V0 ) 1 , V0 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 15:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( V0 , ( int -> V0 ) 2 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 16:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( V0 , ( int -> V0 ) 2 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 17:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( V0 , V0 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 18:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( V0 , V0 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 19:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( V0 , id 2 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 20:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( V0 , id 2 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 21:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( V0 , id int ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 22:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( V0 , id int ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 23:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( id 1 , V0 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 24:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( id 1 , V0 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
Solution 25:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( id int , V0 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( V2 -> V2 )
Solution 26:
V:K -->
( ( int -> V0 ) = ( bool -> V1 ) ) ~> V1 ~> #freezerif_then_else_12 ( id int , V0 ) ~> #freezer_->_0 ( int -> V0 ) ~> tenv ( .Map ) ~> #freezer__1 ( lambda x . x )
