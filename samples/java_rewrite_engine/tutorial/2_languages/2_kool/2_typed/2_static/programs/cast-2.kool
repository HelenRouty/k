class X { void X() {} }
class Y extends X { void Y() {} }
class Z extends X { void Z() {} }

class theMain {
  void theMain() {
    class(X) x  = new X();
    class(Y) y  = new Y();
    class(Z) z  = new Z();
    class(X) xy = new Y();     // ok (y is subclass of X)
    class(X) xz = new Z();     // ok (Z is subclass of X)
//  class(Y) yz = new Z();     // incompatible types
//  class(Y) y1 = new X();     // X is not a Y
//  class(Z) z1 = new X();     // X is not a Z
    class(X) x1 = y;           // ok (y is subclass of X)
    class(X) x2 = z;           // ok (z is subclass of X)
//  class(Y) y1 = (Y) x;       // types ok but produces runtime error
//  class(Z) z1 = (Z) x;       // types ok but produces runtime error
    class(Y) y2 = (Y) x1;      // types and runs ok (x1 is type Y)
    class(Z) z2 = (Z) x2;      // types and runs ok (x2 is type Z)
//  class(Y) y3 = (Y) z;       // inconvertible types
//  class(Z) z3 = (Z) y;       // inconvertible types
    class(theObject) o = z;
//  class(theObject) o1 = (Y) o;  // types ok but produces runtime error
    print("OK\n");
  }
}
