Solution 1
V ==K ( a ~> #freezer__1 ( closure ( .Map , x , lambda y . x ) y z ) ) andBool ( _0 ==K <env> .Map </env> andBool _1 ==K <store> .Map </store> )
Solution 2
V ==K ( a ~> #freezer__1 ( ( lambda x . lambda y . x ) y z ) ) andBool ( _0 ==K <env> .Map </env> andBool _1 ==K <store> .Map </store> )
Solution 3
V ==K ( y ~> #freezer__0 ( closure ( .Map , x , lambda y . x ) ) ~> #freezer__1 ( z ) ~> #freezer__0 ( a ) ) andBool ( _0 ==K <env> .Map </env> andBool _1 ==K <store> .Map </store> )
Solution 4
V ==K ( y ~> #freezer__0 ( lambda x . lambda y . x ) ~> #freezer__1 ( z ) ~> #freezer__0 ( a ) ) andBool ( _0 ==K <env> .Map </env> andBool _1 ==K <store> .Map </store> )
Solution 5
V ==K ( z ~> #freezer__0 ( closure ( .Map , x , lambda y . x ) y ) ~> #freezer__0 ( a ) ) andBool ( _0 ==K <env> .Map </env> andBool _1 ==K <store> .Map </store> )
Solution 6
V ==K ( z ~> #freezer__0 ( ( lambda x . lambda y . x ) y ) ~> #freezer__0 ( a ) ) andBool ( _0 ==K <env> .Map </env> andBool _1 ==K <store> .Map </store> )
